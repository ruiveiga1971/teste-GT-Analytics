import { useState, useEffect } from "react";
import { useMutation } from "@tanstack/react-query";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { useToast } from "@/hooks/use-toast";
import { apiRequest } from "@/lib/queryClient";
import { useLanguage } from "@/i18n/context";
import ptTranslations from '@/i18n/translations/pt.json';
import enTranslations from '@/i18n/translations/en.json';
import esTranslations from '@/i18n/translations/es.json';
import { 
  Calculator,
  Database,
  Target,
  FileText,
  CheckCircle,
  Mail,
  User,
  Phone,
  GraduationCap,
  BookOpen,
  Upload,
  Clock,
  Shield,
  Euro
} from "lucide-react";

// Schema will be created dynamically based on language

type PriceEstimatorData = z.infer<typeof priceEstimatorSchema>;

interface EstimateResult {
  planName: string;
  baseCost: number;
  extraCost: number;
  totalCost: number;
  includes: string[];
  extraService: string;
}

export default function PriceEstimator() {
  const [databasePrep, setDatabasePrep] = useState<string>("");
  const [analysisPlan, setAnalysisPlan] = useState<string>("");
  const [estimate, setEstimate] = useState<EstimateResult | null>(null);
  const [files, setFiles] = useState<File[]>([]);
  const { toast } = useToast();
  const { language } = useLanguage();

  const translations = {
    pt: ptTranslations,
    en: enTranslations,
    es: esTranslations,
  };

  const content = {
    pt: {
      hero: {
        title: "Simulador de Or√ßamento",
        subtitle: "Obtenha uma estimativa personalizada para o seu projeto de an√°lise estat√≠stica",
        description: "Complete os passos abaixo para receber um or√ßamento detalhado baseado nas suas necessidades espec√≠ficas."
      },
      steps: {
        step1: {
          title: "Passo 1: Prepara√ß√£o da Base de Dados",
          subtitle: "A sua base de dados est√° pronta para an√°lise estat√≠stica?",
          options: {
            ready: "Sim, est√° pronta (sem custo adicional)",
            needs_prep_small: "Precisa de prepara√ß√£o (at√© 250 linhas) - +55‚Ç¨",
            needs_prep_medium: "Precisa de prepara√ß√£o (251-500 linhas) - +85‚Ç¨",
            needs_prep_large: "Precisa de prepara√ß√£o (mais de 500 linhas) - +125‚Ç¨",
            unsure: "N√£o tenho a certeza - +125‚Ç¨"
          }
        },
        step2: {
          title: "Passo 2: Objetivo da An√°lise",
          subtitle: "Que tipo de an√°lise estat√≠stica necessita?"
        }
      },
      plans: {
        observa: {
          name: "Plano Observa",
          subtitle: "üìä Ideal para caracterizar a amostra e descrever os dados",
          includes: [
            "Estat√≠stica descritiva completa: frequ√™ncia absoluta e relativa, m√©dia, mediana, moda, desvio-padr√£o, vari√¢ncia, quartis, assimetria e curtose",
            "Resultados tabelados e interpretados para f√°cil inser√ß√£o no trabalho acad√©mico/artigo"
          ]
        },
        compara: {
          name: "Plano Compara",
          subtitle: "‚öñÔ∏è Indicado para estudos que envolvem compara√ß√£o entre grupos ou momentos",
          includes: [
            "Inclui tudo do Plano Observa, mais:",
            "Testes de normalidade (Shapiro-Wilk, Kolmogorov-Smirnov) e homogeneidade de vari√¢ncias (Levene)",
            "Compara√ß√£o de grupos independentes (teste t ou Mann-Whitney, ANOVA ou Kruskal-Wallis)",
            "Compara√ß√£o de medidas emparelhadas (pr√©-p√≥s ou repetidas)",
            "Testes post-hoc quando aplic√°vel",
            "Resultados tabelados e interpretados para f√°cil inser√ß√£o no trabalho acad√©mico/artigo"
          ]
        },
        explica: {
          name: "Plano Explica",
          subtitle: "üß© Recomendado para quem precisa analisar rela√ß√µes e prever resultados",
          includes: [
            "Inclui tudo dos Planos Observa e Compara, mais:",
            "An√°lise de associa√ß√£o entre vari√°veis (Qui-quadrado, correla√ß√£o de Pearson/Spearman)",
            "Regress√£o linear simples e m√∫ltipla (sem limite do n√∫mero de vari√°veis preditoras)",
            "Regress√£o log√≠stica bin√°ria, se aplic√°vel (sem limite do n√∫mero de vari√°veis preditoras)",
            "Modelos de regress√£o hier√°rquica (se aplic√°vel)",
            "Verifica√ß√£o de pressupostos estat√≠sticos e qualidade de ajustamento dos modelos",
            "Resultados tabelados e interpretados para f√°cil inser√ß√£o no trabalho acad√©mico/artigo"
          ]
        },
        valida: {
          name: "Plano Valida",
          subtitle: "üî¨ Desenhado para estudos que envolvem desenvolvimento ou valida√ß√£o de instrumentos",
          includes: [
            "Inclui tudo dos Planos Observa, Compara e Explica se aplic√°vel, mais:",
            "An√°lise Fatorial Explorat√≥ria (AFE) ‚Äì identifica√ß√£o das dimens√µes do instrumento",
            "An√°lise Fatorial Confirmat√≥ria (AFC) ‚Äì valida√ß√£o da estrutura fatorial do instrumento",
            "Avalia√ß√£o da qualidade de ajustamento local",
            "An√°lise da validade convergente e discriminante",
            "Consist√™ncia interna (Alfa de Cronbach) global e por dimens√£o",
            "Resultados tabelados e interpretados para f√°cil inser√ß√£o no trabalho acad√©mico/artigo"
          ]
        }
      },
      result: {
        title: "A sua sele√ß√£o",
        plan: "Plano selecionado",
        baseCost: "Custo base",
        extraCost: "Custo adicional",
        totalCost: "Total estimado",
        includes: "Inclui",
        extraService: "Servi√ßo adicional"
      },
      form: {
        title: "Dados para a Proposta",
        fields: {
          nome: { label: "Nome Completo *", error: "Nome deve ter pelo menos 2 caracteres" },
          email: { label: "Email *", error: "Email inv√°lido" },
          telefone: { label: "Telefone" },
          nivel: {
            label: "N√≠vel Acad√©mico *",
            placeholder: "Selecione o n√≠vel",
            error: "Selecione o n√≠vel acad√©mico",
            options: {
              licenciatura: "Licenciatura",
              mestrado: "Mestrado",
              doutoramento: "Doutoramento"
            }
          },
          area: {
            label: "√Årea de Estudo *",
            placeholder: "Ex: Psicologia, Engenharia, Medicina...",
            error: "√Årea de estudo √© obrigat√≥ria"
          },
          descricao: {
            label: "Informa√ß√µes Adicionais *",
            placeholder: "Descreva o seu estudo, vari√°veis, objetivos...",
            error: "Descri√ß√£o deve ter pelo menos 10 caracteres"
          },
          files: {
            label: "Anexar Ficheiros (Opcional)",
            selected: "ficheiro(s) anexado(s)",
            change: "Clique para alterar",
            upload: "Clique para anexar ficheiros",
            types: "Question√°rio, base de dados, etc."
          }
        },
        submit: {
          sending: "A enviar...",
          button: "Enviar Pedido de Proposta",
          privacy: "Receber√° uma proposta detalhada por email."
        },
        messages: {
          success: {
            title: "Proposta enviada com sucesso!",
            description: "Receber√° a proposta formal detalhada."
          },
          error: {
            title: "Erro ao enviar proposta",
            description: "Tente novamente ou contacte-nos diretamente."
          }
        }
      },
      pricing: {
        title: "Pre√ßos transparentes",
        description: "Consulte o nosso pre√ß√°rio detalhado"
      }
    },
    en: {
      hero: {
        title: "Budget Simulator",
        subtitle: "Get a personalized estimate for your statistical analysis project",
        description: "Complete the steps below to receive a detailed quote based on your specific needs."
      },
      steps: {
        step1: {
          title: "Step 1: Database Preparation",
          subtitle: "Is your database ready for statistical analysis?",
          options: {
            ready: "Yes, it's ready (no additional cost)",
            needs_prep_small: "Needs preparation (up to 250 rows) - +‚Ç¨55",
            needs_prep_medium: "Needs preparation (251-500 rows) - +‚Ç¨85",
            needs_prep_large: "Needs preparation (more than 500 rows) - +‚Ç¨125",
            unsure: "I'm not sure - +‚Ç¨125"
          }
        },
        step2: {
          title: "Step 2: Analysis Objective",
          subtitle: "What type of statistical analysis do you need?"
        }
      },
      plans: {
        observa: {
          name: "Observe Plan",
          subtitle: "üìä Ideal for characterizing the sample and describing data",
          includes: [
            "Complete descriptive statistics: absolute and relative frequency, mean, median, mode, standard deviation, variance, quartiles, skewness and kurtosis",
            "Tabulated and interpreted results for easy insertion into academic work/article"
          ]
        },
        compara: {
          name: "Compare Plan",
          subtitle: "‚öñÔ∏è Suitable for studies involving comparison between groups or moments",
          includes: [
            "Includes everything from Observe Plan, plus:",
            "Normality tests (Shapiro-Wilk, Kolmogorov-Smirnov) and homogeneity of variances (Levene)",
            "Independent group comparison (t-test or Mann-Whitney, ANOVA or Kruskal-Wallis)",
            "Paired measures comparison (pre-post or repeated)",
            "Post-hoc tests when applicable",
            "Tabulated and interpreted results for easy insertion into academic work/article"
          ]
        },
        explica: {
          name: "Explain Plan",
          subtitle: "üß© Recommended for those who need to analyze relationships and predict results",
          includes: [
            "Includes everything from Observe and Compare Plans, plus:",
            "Association analysis between variables (Chi-square, Pearson/Spearman correlation)",
            "Simple and multiple linear regression (no limit on number of predictor variables)",
            "Binary logistic regression, if applicable (no limit on number of predictor variables)",
            "Hierarchical regression models (if applicable)",
            "Verification of statistical assumptions and model fit quality",
            "Tabulated and interpreted results for easy insertion into academic work/article"
          ]
        },
        valida: {
          name: "Validate Plan",
          subtitle: "üî¨ Designed for studies involving instrument development or validation",
          includes: [
            "Includes everything from Observe, Compare and Explain Plans if applicable, plus:",
            "Exploratory Factor Analysis (EFA) ‚Äì identification of instrument dimensions",
            "Confirmatory Factor Analysis (CFA) ‚Äì validation of instrument factor structure",
            "Local fit quality assessment",
            "Convergent and discriminant validity analysis",
            "Internal consistency (Cronbach's Alpha) global and per dimension",
            "Tabulated and interpreted results for easy insertion into academic work/article"
          ]
        }
      },
      result: {
        title: "Your Selection",
        plan: "Selected plan",
        baseCost: "Base cost",
        extraCost: "Additional cost",
        totalCost: "Estimated total",
        includes: "Includes",
        extraService: "Additional service"
      },
      form: {
        title: "Proposal Data",
        fields: {
          nome: { label: "Full Name *", error: "Name must have at least 2 characters" },
          email: { label: "Email *", error: "Invalid email" },
          telefone: { label: "Phone" },
          nivel: {
            label: "Academic Level *",
            placeholder: "Select level",
            error: "Select academic level",
            options: {
              licenciatura: "Bachelor's",
              mestrado: "Master's",
              doutoramento: "PhD"
            }
          },
          area: {
            label: "Study Area *",
            placeholder: "Ex: Psychology, Engineering, Medicine...",
            error: "Study area is required"
          },
          descricao: {
            label: "Additional Information *",
            placeholder: "Describe your study, variables, objectives...",
            error: "Description must have at least 10 characters"
          },
          files: {
            label: "Attach Files (Optional)",
            selected: "file(s) attached",
            change: "Click to change",
            upload: "Click to attach files",
            types: "Questionnaire, database, etc."
          }
        },
        submit: {
          sending: "Sending...",
          button: "Send Proposal Request",
          privacy: "You will receive a detailed proposal by email."
        },
        messages: {
          success: {
            title: "Proposal sent successfully!",
            description: "You will receive the detailed formal proposal."
          },
          error: {
            title: "Error sending proposal",
            description: "Please try again or contact us directly."
          }
        }
      },
      pricing: {
        title: "Transparent pricing",
        description: "Check our detailed pricing"
      }
    },
    es: {
      hero: {
        title: "Simulador de Presupuesto",
        subtitle: "Obtenga una estimaci√≥n personalizada para su proyecto de an√°lisis estad√≠stico",
        description: "Complete los pasos a continuaci√≥n para recibir un presupuesto detallado basado en sus necesidades espec√≠ficas."
      },
      steps: {
        step1: {
          title: "Paso 1: Preparaci√≥n de la Base de Datos",
          subtitle: "¬øEst√° su base de datos lista para an√°lisis estad√≠stico?",
          options: {
            ready: "S√≠, est√° lista (sin costo adicional)",
            needs_prep_small: "Necesita preparaci√≥n (hasta 250 filas) - +55‚Ç¨",
            needs_prep_medium: "Necesita preparaci√≥n (251-500 filas) - +85‚Ç¨",
            needs_prep_large: "Necesita preparaci√≥n (m√°s de 500 filas) - +125‚Ç¨",
            unsure: "No estoy seguro - +125‚Ç¨"
          }
        },
        step2: {
          title: "Paso 2: Objetivo del An√°lisis",
          subtitle: "¬øQu√© tipo de an√°lisis estad√≠stico necesita?"
        }
      },
      plans: {
        observa: {
          name: "Plan Observa",
          subtitle: "üìä Ideal para caracterizar la muestra y describir los datos",
          includes: [
            "Estad√≠stica descriptiva completa: frecuencia absoluta y relativa, media, mediana, moda, desviaci√≥n est√°ndar, varianza, cuartiles, asimetr√≠a y curtosis",
            "Resultados tabulados e interpretados para f√°cil inserci√≥n en el trabajo acad√©mico/art√≠culo"
          ]
        },
        compara: {
          name: "Plan Compara",
          subtitle: "‚öñÔ∏è Indicado para estudios que involucran comparaci√≥n entre grupos o momentos",
          includes: [
            "Incluye todo del Plan Observa, m√°s:",
            "Pruebas de normalidad (Shapiro-Wilk, Kolmogorov-Smirnov) y homogeneidad de varianzas (Levene)",
            "Comparaci√≥n de grupos independientes (prueba t o Mann-Whitney, ANOVA o Kruskal-Wallis)",
            "Comparaci√≥n de medidas emparejadas (pre-post o repetidas)",
            "Pruebas post-hoc cuando sea aplicable",
            "Resultados tabulados e interpretados para f√°cil inserci√≥n en el trabajo acad√©mico/art√≠culo"
          ]
        },
        explica: {
          name: "Plan Explica",
          subtitle: "üß© Recomendado para quien necesita analizar relaciones y predecir resultados",
          includes: [
            "Incluye todo de los Planes Observa y Compara, m√°s:",
            "An√°lisis de asociaci√≥n entre variables (Chi-cuadrado, correlaci√≥n de Pearson/Spearman)",
            "Regresi√≥n lineal simple y m√∫ltiple (sin l√≠mite en el n√∫mero de variables predictoras)",
            "Regresi√≥n log√≠stica binaria, si es aplicable (sin l√≠mite en el n√∫mero de variables predictoras)",
            "Modelos de regresi√≥n jer√°rquica (si es aplicable)",
            "Verificaci√≥n de supuestos estad√≠sticos y calidad de ajuste de los modelos",
            "Resultados tabulados e interpretados para f√°cil inserci√≥n en el trabajo acad√©mico/art√≠culo"
          ]
        },
        valida: {
          name: "Plan Valida",
          subtitle: "üî¨ Dise√±ado para estudios que involucran desarrollo o validaci√≥n de instrumentos",
          includes: [
            "Incluye todo de los Planes Observa, Compara y Explica si es aplicable, m√°s:",
            "An√°lisis Factorial Exploratorio (AFE) ‚Äì identificaci√≥n de las dimensiones del instrumento",
            "An√°lisis Factorial Confirmatorio (AFC) ‚Äì validaci√≥n de la estructura factorial del instrumento",
            "Evaluaci√≥n de la calidad de ajuste local",
            "An√°lisis de la validez convergente y discriminante",
            "Consistencia interna (Alfa de Cronbach) global y por dimensi√≥n",
            "Resultados tabulados e interpretados para f√°cil inserci√≥n en el trabajo acad√©mico/art√≠culo"
          ]
        }
      },
      result: {
        title: "Su Selecci√≥n",
        plan: "Plan seleccionado",
        baseCost: "Costo base",
        extraCost: "Costo adicional",
        totalCost: "Total estimado",
        includes: "Incluye",
        extraService: "Servicio adicional"
      },
      form: {
        title: "Datos para la Propuesta",
        fields: {
          nome: { label: "Nombre Completo *", error: "El nombre debe tener al menos 2 caracteres" },
          email: { label: "Email *", error: "Email inv√°lido" },
          telefone: { label: "Tel√©fono" },
          nivel: {
            label: "Nivel Acad√©mico *",
            placeholder: "Seleccione nivel",
            error: "Seleccione nivel acad√©mico",
            options: {
              licenciatura: "Licenciatura",
              mestrado: "M√°ster",
              doutoramento: "Doctorado"
            }
          },
          area: {
            label: "√Årea de Estudio *",
            placeholder: "Ej: Psicolog√≠a, Ingenier√≠a, Medicina...",
            error: "El √°rea de estudio es obligatoria"
          },
          descricao: {
            label: "Informaci√≥n Adicional *",
            placeholder: "Describa su estudio, variables, objetivos...",
            error: "La descripci√≥n debe tener al menos 10 caracteres"
          },
          files: {
            label: "Adjuntar Archivos (Opcional)",
            selected: "archivo(s) adjuntado(s)",
            change: "Haga clic para cambiar",
            upload: "Haga clic para adjuntar archivos",
            types: "Cuestionario, base de datos, etc."
          }
        },
        submit: {
          sending: "Enviando...",
          button: "Enviar Solicitud de Propuesta",
          privacy: "Recibir√° una propuesta detallada por email."
        },
        messages: {
          success: {
            title: "¬°Propuesta enviada con √©xito!",
            description: "Recibir√° la propuesta formal detallada."
          },
          error: {
            title: "Error al enviar propuesta",
            description: "Int√©ntelo de nuevo o cont√°ctenos directamente."
          }
        }
      },
      pricing: {
        title: "Precios transparentes",
        description: "Consulte nuestro tarifario detallado"
      }
    }
  };

  // Use JSON translations for the specific texts
  const t = translations[language].priceEstimator;
  const contentT = content[language];

  // Create schema dynamically based on language
  const formSchema = z.object({
    nome: z.string().min(2, contentT.form?.fields?.nome?.error || "Nome deve ter pelo menos 2 caracteres"),
    email: z.string().email(contentT.form?.fields?.email?.error || "Email inv√°lido"),
    telefone: z.string().optional(),
    nivel: z.string().min(1, contentT.form?.fields?.nivel?.error || "Selecione o n√≠vel acad√©mico"),
    area: z.string().min(2, contentT.form?.fields?.area?.error || "√Årea de estudo √© obrigat√≥ria"),
    pacoteSelecionado: z.string().min(1, "Selecione um pacote"),
    descricao: z.string().min(10, contentT.form?.fields?.descricao?.error || "Descri√ß√£o deve ter pelo menos 10 caracteres"),
  });

  const form = useForm<PriceEstimatorData>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      nome: "",
      email: "",
      telefone: "",
      nivel: "",
      area: "",
      pacoteSelecionado: "",
      descricao: "",
    },
  });

  const analysisPlans = {
    observa: {
      name: t.plans?.observa?.name || contentT.plans.observa.name,
      cost: 125,
      emoji: "üåê",
      subtitle: t.plans?.observa?.subtitle || contentT.plans.observa.subtitle,
      includes: t.plans?.observa?.includes || contentT.plans.observa.includes
    },
    compara: {
      name: t.plans.compara.name, 
      cost: 295,
      emoji: "üîç",
      subtitle: t.plans.compara.subtitle,
      includes: t.plans.compara.includes
    },
    explica: {
      name: t.plans.explica.name,
      cost: 475,
      emoji: "üìà",
      subtitle: t.plans.explica.subtitle,
      includes: t.plans.explica.includes
    },
    valida: {
      name: t.plans.valida.name,
      cost: 575,
      emoji: "üß™",
      subtitle: t.plans.valida.subtitle,
      includes: t.plans.valida.includes
    }
  };

  const updateProposal = () => {
    if (!analysisPlan) {
      setEstimate(null);
      return;
    }

    let extraCost = 0;
    let extraService = "";

    if (databasePrep === "needs_prep_small") {
      extraCost = 55;
      extraService = language === "pt" ? "Prepara√ß√£o da base de dados (at√© 250 linhas)" :
                     language === "en" ? "Database preparation (up to 250 rows)" :
                     "Preparaci√≥n de la base de datos (hasta 250 filas)";
    } else if (databasePrep === "needs_prep_medium") {
      extraCost = 85;
      extraService = language === "pt" ? "Prepara√ß√£o da base de dados (251-500 linhas)" :
                     language === "en" ? "Database preparation (251-500 rows)" :
                     "Preparaci√≥n de la base de datos (251-500 filas)";
    } else if (databasePrep === "needs_prep_large" || databasePrep === "unsure") {
      extraCost = 125;
      extraService = databasePrep === "needs_prep_large" 
        ? (language === "pt" ? "Prepara√ß√£o da base de dados (mais de 500 linhas)" :
           language === "en" ? "Database preparation (more than 500 rows)" :
           "Preparaci√≥n de la base de datos (m√°s de 500 filas)")
        : (language === "pt" ? "An√°lise e prepara√ß√£o da base de dados (se necess√°rio)" :
           language === "en" ? "Database analysis and preparation (if needed)" :
           "An√°lisis y preparaci√≥n de la base de datos (si es necesario)");
    }

    const plan = analysisPlans[analysisPlan as keyof typeof analysisPlans];
    const totalCost = plan.cost + extraCost;

    const result: EstimateResult = {
      planName: plan.name,
      baseCost: plan.cost,
      extraCost,
      totalCost,
      includes: plan.includes,
      extraService
    };

    setEstimate(result);
    form.setValue("pacoteSelecionado", `${plan.name} - ${totalCost}‚Ç¨`);
  };

  useEffect(() => {
    updateProposal();
  }, [databasePrep, analysisPlan]);

  const estimatorMutation = useMutation({
    mutationFn: async (data: PriceEstimatorData) => {
      const formData = new FormData();
      formData.append('nome', data.nome);
      formData.append('email', data.email);
      if (data.telefone) formData.append('telefone', data.telefone);
      formData.append('nivel', data.nivel);
      formData.append('area', data.area);
      
      const descricaoCompleta = `SIMULA√á√ÉO DE OR√áAMENTO:
Pacote selecionado: ${data.pacoteSelecionado}
Prepara√ß√£o da base de dados: ${databasePrep === "ready" ? "N√£o necess√°ria" : databasePrep === "needs_prep" ? "Necess√°ria" : "N√£o tenho certeza"}
${estimate ? `
DETALHES DA SIMULA√á√ÉO:
- Plano: ${estimate.planName}
- Custo base: ${estimate.baseCost}‚Ç¨
- Custo extra: ${estimate.extraCost}‚Ç¨
- Total estimado: ${estimate.totalCost}‚Ç¨
- Servi√ßos inclu√≠dos: ${estimate.includes.join(", ")}
${estimate.extraService ? `- Servi√ßo extra: ${estimate.extraService}` : ""}
` : ""}
DESCRI√á√ÉO ADICIONAL:
${data.descricao}`;
      
      formData.append('descricao', descricaoCompleta);
      
      // Add files if any
      files.forEach(file => {
        formData.append('files', file);
      });
      
      const response = await fetch('/api/contact', {
        method: 'POST',
        body: formData,
      });
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      return response.json();
    },
    onSuccess: () => {
      toast({
        title: t.form?.messages?.success?.title || "Proposta enviada com sucesso!",
        description: t.form?.messages?.success?.description || "Receber√° a proposta formal detalhada.",
      });
      form.reset();
      setFiles([]);
      setDatabasePrep("");
      setAnalysisPlan("");
      setEstimate(null);
    },
    onError: (error) => {
      toast({
        title: t.form?.messages?.error?.title || "Erro ao enviar proposta",
        description: t.form?.messages?.error?.description || "Tente novamente ou contacte-nos diretamente por email.",
        variant: "destructive",
      });
      console.error("Price estimator error:", error);
    },
  });

  const onSubmit = (data: PriceEstimatorData) => {
    estimatorMutation.mutate(data);
  };

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      const selectedFiles = Array.from(e.target.files);
      setFiles(selectedFiles);
    }
  };

  return (
    <div>
      {/* Hero Section */}
      <section className="gt-gradient-hero py-16">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <Calculator className="h-16 w-16 text-blue-600 mx-auto mb-6" />
          <h1 className="text-4xl lg:text-5xl font-bold gt-text-slate-900 mb-6">
            {t.hero?.title || "Simular Or√ßamento"}
          </h1>
          <p className="text-xl gt-text-slate-600 mb-8">
            {t.hero?.subtitle || "Obtenha uma estimativa inicial do custo da sua an√°lise estat√≠stica."}
          </p>
          
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 inline-block">
            <p className="text-blue-700 font-semibold flex items-center justify-center">
              <Clock className="mr-2 h-5 w-5" />
              {t.hero?.description || "Proposta de or√ßamento formal gratuita ap√≥s receber o seu pedido"}
            </p>
          </div>
        </div>
      </section>

      {/* Configurator */}
      <section className="py-20 bg-white">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          
          {/* Step 1: Database Preparation */}
          <Card className="mb-8">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Database className="h-6 w-6 text-blue-600" />
                <span>{t.steps?.step1?.title || "Passo 1: Prepara√ß√£o da Base de Dados"}</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="gt-text-slate-600 mb-6">
                {t.steps?.step1?.subtitle || "A sua base de dados j√° est√° pronta para an√°lise ou precisa de tratamento pr√©vio (limpeza e organiza√ß√£o)?"}
              </p>
              
              <RadioGroup value={databasePrep} onValueChange={setDatabasePrep}>
                <div className="flex items-start space-x-2 mb-4">
                  <RadioGroupItem value="ready" id="ready" className="mt-1" />
                  <div>
                    <Label htmlFor="ready" className="cursor-pointer font-medium">
                      {t.steps?.step1?.options?.ready || "Sim, a base de dados est√° pronta para ser trabalhada no SPSS ou no R (ex.: as vari√°veis est√£o codificadas)."}
                    </Label>
                  </div>
                </div>
                
                <div className="flex items-start space-x-2 mb-4">
                  <RadioGroupItem value="needs_prep_header" id="needs_prep_header" className="mt-1" disabled />
                  <div>
                    <Label htmlFor="needs_prep_header" className="cursor-pointer font-medium">
                      {(t.steps?.step1?.options as any)?.needs_prep_header || "N√£o, necessito do servi√ßo complementar de prepara√ß√£o da base de dados, que inclui:"}
                    </Label>
                    <ul className="text-sm text-slate-600 mt-2 ml-4 space-y-1">
                      {((t.steps?.step1?.options as any)?.needs_prep_list || [
                        "Verifica√ß√£o e tratamento de valores em falta",
                        "Corre√ß√£o de erros de digita√ß√£o", 
                        "Codifica√ß√£o ou recodifica√ß√£o de vari√°veis"
                      ]).map((item: string, index: number) => (
                        <li key={index}>‚Ä¢ {item}</li>
                      ))}
                    </ul>
                    <p className="text-sm font-medium text-slate-700 mt-3 mb-2">{(t.steps?.step1?.options as any)?.database_size_question || "A minha base de dados tem"}:</p>
                    <div className="ml-4 space-y-3">
                      <div className="flex items-start space-x-2">
                        <RadioGroupItem value="needs_prep_small" id="needs_prep_small" className="mt-1" />
                        <div>
                          <Label htmlFor="needs_prep_small" className="cursor-pointer">
                            {t.steps?.step1?.options?.needs_prep_small || "At√© 250 linhas (55‚Ç¨)"}
                          </Label>
                        </div>
                      </div>
                      <div className="flex items-start space-x-2">
                        <RadioGroupItem value="needs_prep_medium" id="needs_prep_medium" className="mt-1" />
                        <div>
                          <Label htmlFor="needs_prep_medium" className="cursor-pointer">
                            {t.steps?.step1?.options?.needs_prep_medium || "Entre 251 e 500 linhas (85‚Ç¨)"}
                          </Label>
                        </div>
                      </div>
                      <div className="flex items-start space-x-2">
                        <RadioGroupItem value="needs_prep_large" id="needs_prep_large" className="mt-1" />
                        <div>
                          <Label htmlFor="needs_prep_large" className="cursor-pointer">
                            {t.steps?.step1?.options?.needs_prep_large || "Mais de 500 linhas (125‚Ç¨)"}
                          </Label>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <div className="flex items-start space-x-2">
                  <RadioGroupItem value="unsure" id="unsure" className="mt-1" />
                  <div>
                    <Label htmlFor="unsure" className="cursor-pointer font-medium">
                      {t.steps?.step1?.options?.unsure || "N√£o tenho a certeza. Podem analisar a minha base de dados e dizer se precisa de prepara√ß√£o? (125‚Ç¨)"}
                    </Label>
                  </div>
                </div>
              </RadioGroup>
            </CardContent>
          </Card>

          {/* Step 2: Analysis Objective */}
          <Card className="mb-8">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Target className="h-6 w-6 text-blue-600" />
                <span>{t.steps?.step2?.title || "Passo 2: Objetivo Principal da An√°lise"}</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="gt-text-slate-600 mb-6">
                {t.steps?.step2?.subtitle || "Qual √© o principal objetivo da sua an√°lise estat√≠stica?"}
              </p>
              
              <RadioGroup value={analysisPlan} onValueChange={setAnalysisPlan}>
                <Card className="border-2 hover:border-blue-300 transition-colors">
                  <CardContent className="p-4">
                    <div className="flex items-center space-x-2 mb-2">
                      <RadioGroupItem value="observa" id="observa" />
                      <Label htmlFor="observa" className="cursor-pointer font-semibold">
                        {(t.steps?.step2?.options as any)?.observa || "Caracterizar a amostra e descrever os dados"}
                      </Label>
                    </div>
                    <p className="text-sm text-slate-600 ml-6">
                      {t.plans?.observa?.name || "Plano Observa"}
                    </p>
                  </CardContent>
                </Card>
                
                <Card className="border-2 hover:border-blue-300 transition-colors">
                  <CardContent className="p-4">
                    <div className="flex items-center space-x-2 mb-2">
                      <RadioGroupItem value="compara" id="compara" />
                      <Label htmlFor="compara" className="cursor-pointer font-semibold">
                        {(t.steps?.step2?.options as any)?.compara || "Comparar vari√°veis entre diferentes grupos ou momentos"}
                      </Label>
                    </div>
                    <p className="text-sm text-slate-600 ml-6">
                      {t.plans?.compara?.name || "Plano Compara"}
                    </p>
                  </CardContent>
                </Card>
                
                <Card className="border-2 hover:border-blue-300 transition-colors">
                  <CardContent className="p-4">
                    <div className="flex items-center space-x-2 mb-2">
                      <RadioGroupItem value="explica" id="explica" />
                      <Label htmlFor="explica" className="cursor-pointer font-semibold">
                        {(t.steps?.step2?.options as any)?.explica || "Analisar rela√ß√µes e prever resultados"}
                      </Label>
                    </div>
                    <p className="text-sm text-slate-600 ml-6">
                      {t.plans?.explica?.name || "Plano Explica"}
                    </p>
                  </CardContent>
                </Card>
                
                <Card className="border-2 hover:border-blue-300 transition-colors">
                  <CardContent className="p-4">
                    <div className="flex items-center space-x-2 mb-2">
                      <RadioGroupItem value="valida" id="valida" />
                      <Label htmlFor="valida" className="cursor-pointer font-semibold">
                        {(t.steps?.step2?.options as any)?.valida || "Analisar as propriedades psicom√©tricas de um instrumento (escala, question√°rio)"}
                      </Label>
                    </div>
                    <p className="text-sm text-slate-600 ml-6">
                      {t.plans?.valida?.name || "Plano Valida"}
                    </p>
                  </CardContent>
                </Card>
              </RadioGroup>
            </CardContent>
          </Card>

          {/* Results Section */}
          {estimate && (
            <Card className="mb-8 bg-blue-50 border-blue-200">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2 text-blue-800">
                  <Euro className="h-6 w-6" />
                  <span>{t.result?.title || "A sua sele√ß√£o"}</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="mb-4">
                    <div className="flex justify-between items-center mb-2">
                      <span className="font-semibold text-lg">
                        {analysisPlans[analysisPlan as keyof typeof analysisPlans]?.emoji} {estimate.planName} ‚Äì {estimate.baseCost}‚Ç¨
                      </span>
                    </div>
                    <p className="text-sm text-blue-700 font-medium">
                      {analysisPlans[analysisPlan as keyof typeof analysisPlans]?.subtitle}
                    </p>
                  </div>
                  
                  {estimate.extraCost > 0 && (
                    <div className="flex justify-between items-center">
                      <span>{t.result?.extraService || "Servi√ßo extra"} - {estimate.extraService}:</span>
                      <span className="font-bold text-lg">{estimate.extraCost}‚Ç¨</span>
                    </div>
                  )}
                  
                  <div className="border-t pt-4">
                    <div className="flex justify-between items-center">
                      <span className="text-xl font-bold text-blue-800">{t.result?.totalCost || "Custo Total"}:</span>
                      <span className="text-2xl font-bold text-blue-800">{estimate.totalCost}‚Ç¨</span>
                    </div>
                  </div>
                  
                  <div className="mt-6">
                    <h4 className="font-semibold mb-3">{t.result?.includes || "Inclui"}:</h4>
                    <div className="space-y-2">
                      {estimate.includes.map((item, index) => (
                        <div key={index} className="text-sm gt-text-slate-600">
                          {item.startsWith("Inclui tudo") || item.includes("mais:") ? (
                            <p className="font-medium text-slate-700">{item}</p>
                          ) : (
                            <div className="flex items-start space-x-2">
                              <span className="text-blue-600 mt-1">‚Ä¢</span>
                              <span>{item}</span>
                            </div>
                          )}
                        </div>
                      ))}
                    </div>
                  </div>
                  

                </div>
              </CardContent>
            </Card>
          )}

          {/* Submission Form */}
          {estimate && (
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <FileText className="h-6 w-6 text-blue-600" />
                  <span>{t.form?.title || "Receber Proposta Formal"}</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {/* Nome */}
                    <div>
                      <Label htmlFor="nome" className="flex items-center space-x-2 text-sm font-semibold gt-text-slate-700 mb-2">
                        <User className="h-4 w-4" />
                        <span>{t.form?.fields?.nome?.label || "Nome completo"}</span>
                      </Label>
                      <Input
                        id="nome"
                        {...form.register("nome")}
                        className="transition-colors focus:ring-2 focus:ring-blue-500"
                      />
                      {form.formState.errors.nome && (
                        <p className="text-red-500 text-sm mt-1">{form.formState.errors.nome.message}</p>
                      )}
                    </div>
                    
                    {/* Email */}
                    <div>
                      <Label htmlFor="email" className="flex items-center space-x-2 text-sm font-semibold gt-text-slate-700 mb-2">
                        <Mail className="h-4 w-4" />
                        <span>{t.form?.fields?.email?.label || "Email"}</span>
                      </Label>
                      <Input
                        id="email"
                        type="email"
                        {...form.register("email")}
                        className="transition-colors focus:ring-2 focus:ring-blue-500"
                      />
                      {form.formState.errors.email && (
                        <p className="text-red-500 text-sm mt-1">{form.formState.errors.email.message}</p>
                      )}
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {/* Telefone */}
                    <div>
                      <Label htmlFor="telefone" className="flex items-center space-x-2 text-sm font-semibold gt-text-slate-700 mb-2">
                        <Phone className="h-4 w-4" />
                        <span>{t.form?.fields?.telefone?.label || "Telefone"}</span>
                      </Label>
                      <Input
                        id="telefone"
                        type="tel"
                        {...form.register("telefone")}
                        className="transition-colors focus:ring-2 focus:ring-blue-500"
                      />
                    </div>
                    
                    {/* N√≠vel Acad√©mico */}
                    <div>
                      <Label htmlFor="nivel" className="flex items-center space-x-2 text-sm font-semibold gt-text-slate-700 mb-2">
                        <GraduationCap className="h-4 w-4" />
                        <span>{t.form?.fields?.nivel?.label || "N√≠vel acad√©mico"}</span>
                      </Label>
                      <Select onValueChange={(value) => form.setValue("nivel", value)}>
                        <SelectTrigger className="transition-colors focus:ring-2 focus:ring-blue-500">
                          <SelectValue placeholder={t.form?.fields?.nivel?.placeholder || "Selecione o seu n√≠vel"} />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="licenciatura">Licenciatura</SelectItem>
                          <SelectItem value="mestrado">Mestrado</SelectItem>
                          <SelectItem value="doutoramento">Doutoramento</SelectItem>
                        </SelectContent>
                      </Select>
                      {form.formState.errors.nivel && (
                        <p className="text-red-500 text-sm mt-1">{form.formState.errors.nivel.message}</p>
                      )}
                    </div>
                  </div>
                  
                  {/* √Årea de Estudo */}
                  <div>
                    <Label htmlFor="area" className="flex items-center space-x-2 text-sm font-semibold gt-text-slate-700 mb-2">
                      <BookOpen className="h-4 w-4" />
                      <span>{t.form?.fields?.area?.label || "√Årea de estudo"}</span>
                    </Label>
                    <Input
                      id="area"
                      {...form.register("area")}
                      placeholder={t.form?.fields?.area?.placeholder || "Ex: Psicologia, Enfermagem, Gest√£o..."}
                      className="transition-colors focus:ring-2 focus:ring-blue-500"
                    />
                    {form.formState.errors.area && (
                      <p className="text-red-500 text-sm mt-1">{form.formState.errors.area.message}</p>
                    )}
                  </div>
                  
                  {/* Descri√ß√£o */}
                  <div>
                    <Label htmlFor="descricao" className="flex items-center space-x-2 text-sm font-semibold gt-text-slate-700 mb-2">
                      <FileText className="h-4 w-4" />
                      <span>{t.form?.fields?.descricao?.label || "Descri√ß√£o do projeto"}</span>
                    </Label>
                    <Textarea
                      id="descricao"
                      {...form.register("descricao")}
                      rows={4}
                      placeholder={t.form?.fields?.descricao?.placeholder || "Descreva brevemente o seu projeto de investiga√ß√£o, as suas hip√≥teses e objetivos..."}
                      className="transition-colors focus:ring-2 focus:ring-blue-500 resize-vertical"
                    />
                    {form.formState.errors.descricao && (
                      <p className="text-red-500 text-sm mt-1">{form.formState.errors.descricao.message}</p>
                    )}
                  </div>
                  
                  {/* File Upload */}
                  <div>
                    <Label htmlFor="ficheiros" className="flex items-center space-x-2 text-sm font-semibold gt-text-slate-700 mb-2">
                      <Upload className="h-4 w-4" />
                      <span>{t.form?.fields?.files?.label || "Ficheiros (opcional)"}</span>
                    </Label>
                    <div className="border-2 border-dashed border-slate-300 rounded-lg p-6 text-center hover:border-blue-400 transition-colors">
                      <input
                        type="file"
                        id="ficheiros"
                        multiple
                        accept=".pdf,.doc,.docx,.xlsx,.xls,.csv,.sav"
                        onChange={handleFileChange}
                        className="hidden"
                      />
                      <div className="cursor-pointer" onClick={() => document.getElementById('ficheiros')?.click()}>
                        {files.length > 0 ? (
                          <>
                            <CheckCircle className="h-12 w-12 text-green-500 mx-auto mb-2" />
                            <p className="text-green-600 mb-1">
                              {files.length} {language === "pt" ? "ficheiro(s) selecionado(s)" :
                                            language === "en" ? "file(s) selected" :
                                            "archivo(s) seleccionado(s)"}
                            </p>
                            <p className="text-sm text-slate-500">
                              {language === "pt" ? "Clique para alterar" :
                               language === "en" ? "Click to change" :
                               "Haga clic para cambiar"}
                            </p>
                          </>
                        ) : (
                          <>
                            <Upload className="h-12 w-12 text-slate-400 mx-auto mb-2" />
                            <p className="gt-text-slate-600 mb-1">
                              {language === "pt" ? "Clique para anexar ficheiros ou arraste aqui" :
                               language === "en" ? "Click to attach files or drag here" :
                               "Haga clic para adjuntar archivos o arrastre aqu√≠"}
                            </p>
                            <p className="text-sm text-slate-500">
                              {language === "pt" ? "Base de dados, question√°rio, objetivos (PDF, Word, Excel)" :
                               language === "en" ? "Database, questionnaire, objectives (PDF, Word, Excel)" :
                               "Base de datos, cuestionario, objetivos (PDF, Word, Excel)"}
                            </p>
                          </>
                        )}
                      </div>
                    </div>
                  </div>
                  
                  {/* Submit Button */}
                  <div className="text-center">
                    <Button
                      type="submit"
                      size="lg"
                      disabled={estimatorMutation.isPending}
                      className="gt-accent hover:bg-orange-600 text-lg px-8 py-4 shadow-lg hover:shadow-xl transition-all"
                    >
                      {estimatorMutation.isPending 
                        ? ((t as any).form?.button?.loading || "A enviar...")
                        : ((t as any).form?.button?.send || "Receber Proposta")}
                    </Button>
                    
                    <p className="text-sm text-slate-500 mt-4">
                      {(t as any).form?.privacy || "Os seus dados pessoais s√£o protegidos conforme a nossa pol√≠tica de privacidade."}
                    </p>
                  </div>
                </form>
              </CardContent>
            </Card>
          )}
        </div>
      </section>

      {/* Guarantees Section */}
      <section className="py-16 gt-bg-slate-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold gt-text-slate-900 mb-4">
              {(t as any).guarantees?.title || "Garantias GT Analytics"}
            </h2>
            <p className="text-lg gt-text-slate-600 max-w-2xl mx-auto">
              {(t as any).guarantees?.subtitle || "Compromissos que assumimos com todos os nossos clientes"}
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {[
              {
                icon: <Euro className="h-8 w-8 text-orange-600" />,
                title: (t as any).guarantees?.items?.pricing?.title || "Pre√ßos transparentes",
                description: (t as any).guarantees?.items?.pricing?.description || "Sem custos ocultos. O pre√ßo acordado √© o pre√ßo final."
              },
              {
                icon: <Shield className="h-8 w-8 text-green-600" />,
                title: (t as any).guarantees?.items?.confidentiality?.title || "Confidencialidade absoluta",
                description: (t as any).guarantees?.items?.confidentiality?.description || "Os seus dados s√£o tratados com total confidencialidade."
              },
              {
                icon: <CheckCircle className="h-8 w-8 text-blue-600" />,
                title: (t as any).guarantees?.items?.quality?.title || "Qualidade garantida",
                description: (t as any).guarantees?.items?.quality?.description || "Revis√£o ilimitada at√© √† sua satisfa√ß√£o completa."
              }
            ].map((guarantee, index) => (
              <Card key={index} className="text-center">
                <CardContent className="p-6">
                  <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    {guarantee.icon}
                  </div>
                  <h3 className="text-lg font-semibold gt-text-slate-900 mb-3">{guarantee.title}</h3>
                  <p className="gt-text-slate-600 whitespace-pre-line">{guarantee.description}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}